version: "3.9"

services:
  postgres:
    image: postgres:15.3-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.2-alpine
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]
    restart: always
    ports:
      - 6379:6379
    volumes:
      - cache_data:/data

  rabbitmq:
    image: rabbitmq:4.0.5-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit_data:/rabbitmq/data/:/var/lib/rabbitmq/
      - rabbit_log:/rabbitmq/log/:/var/log/rabbitmq

  tc-order-backend:
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

    build:
      context: .
    container_name: tc-backend
    ports:
      - 8080:8080
    restart: always
    environment:
      DATABASE_HOST: postgres
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASS: ${POSTGRES_PASSWORD}
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/public/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
volumes:
  pgdata:
    external: false
  cache_data:
    external: false
  rabbit_data:
    external: false
  rabbit_log:
    external: false
